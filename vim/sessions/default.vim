" ~/.dotfiles/vim/sessions/default.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 06 July 2017 at 20:18:10.
" Open this file in Vim and run :source % to restore your session.

set guioptions=gm
silent! set guifont=Sauce\ Code\ Powerline:h11
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'monokai' | colorscheme monokai | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/_Projects/divi/fw/payg_example
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +58 stubs.h
badd +85 example.c
badd +160 stubs.c
badd +75 protocol.h
argglobal
silent! argdel *
$argadd stubs.h
edit protocol.h
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd t
set winminheight=1 winheight=1 winminwidth=1 winwidth=1
exe '1resize ' . ((&lines * 36 + 40) / 80)
exe 'vert 1resize ' . ((&columns * 101 + 100) / 200)
exe '2resize ' . ((&lines * 36 + 40) / 80)
exe 'vert 2resize ' . ((&columns * 98 + 100) / 200)
exe '3resize ' . ((&lines * 40 + 40) / 80)
exe 'vert 3resize ' . ((&columns * 101 + 100) / 200)
exe '4resize ' . ((&lines * 40 + 40) / 80)
exe 'vert 4resize ' . ((&columns * 98 + 100) / 200)
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 48 - ((33 * winheight(0) + 18) / 36)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
48
normal! 0
lcd ~/_Projects/divi/fw/payg_example
wincmd w
argglobal
edit ~/_Projects/divi/fw/payg_example/stubs.h
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 67 - ((17 * winheight(0) + 18) / 36)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
67
normal! 0
lcd ~/_Projects/divi/fw/payg_example
wincmd w
argglobal
edit ~/_Projects/divi/fw/payg_example/example.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 77 - ((9 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
77
normal! 0
lcd ~/_Projects/divi/fw/payg_example
wincmd w
argglobal
edit ~/_Projects/divi/fw/payg_example/stubs.c
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 160 - ((19 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
160
normal! 0
lcd ~/_Projects/divi/fw/payg_example
wincmd w
3wincmd w
exe '1resize ' . ((&lines * 36 + 40) / 80)
exe 'vert 1resize ' . ((&columns * 101 + 100) / 200)
exe '2resize ' . ((&lines * 36 + 40) / 80)
exe 'vert 2resize ' . ((&columns * 98 + 100) / 200)
exe '3resize ' . ((&lines * 40 + 40) / 80)
exe 'vert 3resize ' . ((&columns * 101 + 100) / 200)
exe '4resize ' . ((&lines * 40 + 40) / 80)
exe 'vert 4resize ' . ((&columns * 98 + 100) / 200)
tabnext 1
if exists('s:wipebuf')
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
set winminheight=1 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

3wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
