Done
==================================================

-- General (intrinsic, in .vimrc or other places) ---
:mapping		shows all the key mappings by plugins
:set param?		shows what parm is set to
:reg			shows registers
<C-L>			turn off highlight search
\<space>		toggle highlight search
gh				left move between windows
gl				right
gk				up
gj				down move between windows
<C-P>			autocomplete searching backward
<C-N>			autocomplete searching downward


-- NERDtree --
\t                    for showing NERDtree panel
:help NERD_tree.txt   for help page

-- goyo.vim --
:Goyo  for distraction-free writing
\b                    for Tagbar panel
\w                    removes trailing whitespace
\a                    toggles files with A.vim (.c <-> .h)


<C-E> <C-Y>		scroll up/down 1 line
<C-U> <C-D>		scroll up/down half a screen
<C-F> <C-B>		scroll foward/backward a full screen (minus 2 lines)
zz				puts line w/ cursor in middle of window
zt zb			puts line w/ cursor at top/bottom


Look at using - or , for <leader>

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
-- vim-easy-align --
highlight in visual mode, then hit <Enter> then column number, then <space>

-- vim-surround (add vim-repeat with this) --
ds['"(t]   delete surround (t is html tag)
cs['"(t]   create surround

-- vim-commentary --
gcc     comment out a line
gc<motion>  comment out target of motion
gc      in viusal mode to comment out selection
:7,15Commentary
:g/TODO/Commentary

-- auto-pairs --
Insert parens:
  1. use Ctrl-V) to insert paren without triggering plugin
  2. use Alt-P to turn off the plugin
  3. use DEL or x to delete the character inserted by plugin

System Shortcuts:
    <CR>  : Insert new indented line after return if cursor in blank brackets or quotes.
    <BS>  : Delete brackets in pair
    <M-p> : Toggle Autopairs (g:AutoPairsShortcutToggle)
    <M-e> : Fast Wrap (g:AutoPairsShortcutFastWrap)
    <M-n> : Jump to next closed pair (g:AutoPairsShortcutJump)
    <M-b> : BackInsert (g:AutoPairsShortcutBackInsert)

If <M-p> <M-e> or <M-n> conflict with another keys or want to bind to another keys, add
    let g:AutoPairsShortcutToggle = '<another key>'
to .vimrc, if the key is empty string '', then the shortcut will be disabled.

-- superman --
K  on word launches man page into vim


-- vim-better-whitespace --
:ToggleWhitespace                   mapped to <leader>w
:StripWhitespace                    mapped to <leader>W
:CurrentLineWhitespaceOff <level>    soft or hard
:CurrentLineWhitespaceOn
:ToggleStripWhitespaceOnSave


#######################################################################

Things I want to add/change:
2. Simplified (previous jah config) when using xterm vs iTerm or maybe use
   if hasgui() and have macvim use all the plugins and simplified one for
   no gui (i.e. xterm or iTermg).
3. Remove the autoinsert of matching ", ', ), } or figure out how to jump
   out of it and continue
4. Is auto generation of tags happening already? How to limit where/when
   they are created so only in code dirs.
5. Look into vim-ctrlspace
9. Snipmate and Supertab might be competing for <tab> mapping
10. Move from NERDTree to unite?
11. 80th column is too orange in terminals - should be light grey.
13. Mapping to toggle on/off list/listchars to see tabs


* Project file so the it acts like an IDE; can re-open as left it
* Tab completion for var, methods, etc.
* Search through all files in project
* Code snippet insert
* Easy navigation between buffers, windows, tabs; loading multiples of each

