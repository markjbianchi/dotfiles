" ----- Load plugins -------------------------------------------------
call plug#begin('~/.vim/plugged')

" --- universally agreed settings ---
Plug 'tpope/vim-sensible'
" --- make vim look pretty ---
Plug 'tomasr/molokai'
Plug 'altercation/vim-colors-solarized'
Plug 'zenorocha/dracula-theme'
Plug 'bling/vim-airline'
Plug 'bling/vim-bufferline'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

" -- syntax-checker, changes, etc ---
Plug 'scrooloose/syntastic'
"Plug 'airblade/vim-gitgutter'

"Plug 'xolox/vim-misc'   causing issue??
"Plug 'xolox/vim-easytags'
Plug 'majutsushi/tagbar'

" --- file, fuzzy searching ---
Plug 'ctrlpvim/ctrlp.vim'
Plug 'Shougo/vimproc.vim'
Plug 'Shougo/unite.vim'
Plug 'rking/ag.vim'
Plug 'vim-scripts/a.vim'

"Plug 'Valloric/YouCompleteMe'
Plug 'ervandew/supertab'
"Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'Raimondi/delimitMate'
Plug 'junegunn/vim-easy-align'
Plug 'bronson/vim-trailing-whitespace'
Plug 'scrooloose/nerdcommenter'

" --- man pages, tmux ---
Plug 'jez/vim-superman'
Plug 'christoomey/vim-tmux-navigator'

call plug#end()

" ----- Plugin-Specific Settings -------------------------------------

" ----- altercation/vim-colors-solarized settings -----
" Toggle this to "light" for light colorscheme
set background=dark
" Uncomment the next line if your terminal is not configured for solarized
"let g:solarized_termcolors=256

" ----- bling/vim-airline settings -----
" Always show statusbar
set laststatus=2
" Uncomment below if using patched fonts
let g:airline_powerline_fonts = 1
" Show PASTE if in paste mode
let g:airline_detect_paste = 1
" Show airline for tabs too
let g:airline#extensions#tabline#enabled = 1

" ----- bronson/vim-trailing-whitespace settings -----
" See and fix trailing whitespace :FixWhitespace
if (exists('+colorcolumn'))
    set colorcolumn=80
    highlight ColorColum ctermbg=9
endif

" ----- jistr/vim-nerdtree-tabs -----
" Open/close NERDTree Tabs with \t
nmap <silent> <leader>t :NERDTreeTabsToggle<cr>
" To have NERDTree always open on startup
let g:nerdtree_tabs_open_on_console_startup = 0

" ----- scrooloose/syntastic settings -----
let g:syntastic_error_symbol = '✘'
let g:syntastic_warning_symbol = "▲"
augroup mySyntastic
  au!
  au FileType tex let b:syntastic_mode = "passive"
  au FileType cpp let b:syntastic_mode = "passive"
augroup END
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
nnoremap <Leader>S :SyntasticToggleMode<CR>

" ----- xolox/vim-easytags settings -----
set tags=./tags;,~/.vimtags
" Sensible defaults
let g:easytags_events = ['BufReadPost', 'BufWritePost']
let g:easytags_async = 1
let g:easytags_dynamic_files = 2
let g:easytags_resolve_links = 1
let g:easytags_suppress_ctags_warning = 1

" ----- majutsushi/tagbar settings -----
"  Open/close tagbar with \b
nmap <silent> <leader>b :TagbarToggle<cr>
" Uncomment to open tagbar automatically whenever possible
"autocmd BufEnter * nested :call tagbar#autoopen(0)
" Treat .ts in Vim as .ts in ctags
"let g:tagbar_type_typescript = {
"  \ 'ctagstype': 'typescript',
"  \ 'kinds': [
"    \ 'c:classes',
"    \ 'n:modules',
"    \ 'f:functions',
"    \ 'v:variables',
"    \ 'v:varlambdas',
"    \ 'm:members',
"    \ 'i:interfaces',
"    \ 'e:enums',
"  \ ]
"\ }
" Treat .ts in Vim as .js in ctags
let g:tagbar_type_typescript = {
  \ 'ctagstype': 'JavaScript',
  \ 'kinds': [
    \ 'f:functions',
    \ 'c:classes',
    \ 'm:members',
    \ 'p:properties',
    \ 'v:globals',
  \ ]
\ }

" ----- Shougo/unite.vim settings -----
let g:unite_source_history_yank_enable = 1
try
  let g:unite_source_rec_async_command='ag --nocolor --nogroup -g ""'
  call unite#filters#matcher_default#use(['matcher_fuzzy'])
catch
endtry
" Search a file in the filetree
"nnoremap <space><space> :split<cr> :<c-u>Unite -start-insert file_rec/a
" Reset not it is <C-l> normally
":nnoremap <space>r <Plug>(unite_restart)

" ----- rking/ag.vim settings -----
" Type & to search the word in all files in the current dir
nmap & :Ag <c-r>=expand("<cword>")<cr><cr>
nnoremap <space>/ :Ag

" ----- airblade/vim-gitgutter settings -----
"  Required after having changed the colorscheme
hi clear SignColumn
" In vim-airline, only display "hunks" if the diff is non-zero
let g:airblade#extensions#hunks#non_zero_only = 1

" ----- Raimondi/delimitMate settings -----
let delimitMate_expand_cr = 1
augroup mydelimitMate
  au!
  au FileType markdown let b:delimitMate_nesting_quotes = ["`"]
  au FileType tex let b:delimitMate_nesting_quotes = ""
  au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},`:'"
  au FileType python let b:delimitMate_nesting_quotes = ['"', "'"]
augroup END

" ----- jez/vim-superman settings -----
noremap K :SuperMan <cword><cr>

"vim:ft=vim
