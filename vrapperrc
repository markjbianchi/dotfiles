set smartindent         " indents after <CR> appropriately
set autoindent
set ignorecase          " case insensitive search
set smartcase           " search string determines case matching
set incsearch           " incremental search
set nohlsearch          " turn off highlight search results
set number              " absolute line numbers
set scrolloff=3         " keep 3 lines above/below the cursor when scrolling
set softtabstop=4
set tabstop=4
set expandtab           " turn tabs into spaces (use <C-V>Tab to insert real tabs
set shiftround          " round indent to multiple of shiftwidth
set shiftwidth=2
set iskeyword+=\$,-     " add extra characters that are valid parts of vars
set clipboard+=unnamed,unnamedplus
set wrapscan            " search wraps around EOF

" Vrapper options --------------------------------------------------------
"set contentassistmode
set startnormalmode

set smarttab

" Basic options ----------------------------------------------------------
set enc=utf-8
set fenc=utf-8
set modeline            " allow per-file settings via mode line
set showcmd             " show incomplete commands at : prompt
set hidden              " change buffer - without saving
set visualbell
set noerrorbells
set ttyfast             " smoother performance since we are using modern terminals
set backspace=indent,eol,start
set ruler
set relativenumber      " plus relative line numbers
set laststatus=2        " always show the statusline
set history=768
"set list                " shows unprintable chars
set listchars=tab:▸\ ,eol:¬,extends:❯,precedes:❮
set lazyredraw          " delay redrawing screen during macros - performance boost
set matchtime=3         " tenths of second to show matching parens
set showbreak=↪         " char to put at start of lines that have been wrapped
set title               " set the title of the window to the file
set autoread            " automatically reload file changes if detected
set nobomb              " no byte order mark at start of file
set viminfo='50,n$VIMFILES/viminfo
set ttimeout
set ttimeoutlen=50      " make <ESC> work faster
set timeoutlen=1200     " time to wait for a command (e.g., after a leader)
set sidescrolloff=7     " keep 7 columns to left/right of cursor when scrolling
set sidescroll=1        " minimum of 1 column to scroll
set fileformats=mac,dos,unix
set nostartofline       " don't go to start of line after some scroll commands
set nojoinspaces        " use one space, not two after punctuation

" Mappings ---------------------------------------------------------------
" Toggles highlighting of search
noremap <LEADER><SPACE> :set hlsearch!<CR>

" Ctrl-l to turn off higlighting and repaint
noremap <C-L> :nohlsearch<CR><C-L>

" Keep searching in the middle of the window
nnoremap n nzzzv
nnoremap N Nzzzv

" Toggle [N]on-printable characters
nnoremap <LEADER>N :set list!<CR>

inoremap jk <ESC>

" Make Y and D behanve like other capital commands
noremap Y y$
noremap D d$

" Split line (sister to [J]oin lines)
" The normal use of S is covered by cc, so don't worry about shadowing it.
nnoremap S i<CR><ESC>^mwgk:silent! s/\v +$//<CR>:noh<CR>`w

" Make movement to beginning/endo of line easier
nnoremap H ^
nnoremap L $
vnoremap L g_

" Use ; for : in normal and visual mode, less keystrokes
nnoremap ; :
vnoremap ; :

" Swap implementations of ` and ' jump-to markers
" By default, ' jumps to the marked line, ` jumps to the mark line and column
nnoremap ' `
nnoremap ` '

" Select entire buffer (like Ctrl-A)
nnoremap vy ggVG

" Underline a line with hyphens
noremap <LEADER>- yypVr-
" Underline a line with equals
noremap <LEADER>= yypVr=

" Surround word with " or ':w
nnoremap <LEADER>" viw<ESC>a"<ESC>hbi"<ESC>lel
nnoremap <LEADER>' viw<ESC>a'<ESC>hbi'<ESC>lel

" Use <tab> to indent in visual mode
vnoremap <Tab> >'<0v'>$
vnoremap <S-Tab> <'<0v'>$

" Break a comma-delimited list onto new lines
vnoremap <LEADER>, :s/,/,\r/g<CR>

" split window horizontally or veritcally *and* switch to the new split
nnoremap <LEADER>hs :split<bar>:wincmd j<CR>
nnoremap <LEADER>vs :vsplit<bar>:wincmd l<CR>
" close the current window
nnoremap <LEADER>sc :close<CR>

" navigate splits with g command prepended to the analogous vim motion
nnoremap gh :wincmd h<CR>
nnoremap gj :wincmd j<CR>
nnoremap gk :wincmd k<CR>
nnoremap gl :wincmd l<CR>

" go to previous, top left, bottom right window; cycle through windows
nnoremap gp :wincmd p<CR>
nnoremap gt :wincmd t<CR>
nnoremap gb :wincmd b<CR>
nnoremap gw :wincmd w<CR>

" equal size windows
nnoremap g= :wincmd =<CR>

