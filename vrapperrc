" Normal vim options -----------------------------------------------------
set clipboard+=unnamed,unnamedplus
set nohlsearch          " turn off highlight search results
set ignorecase          " case insensitive search
set incsearch           " incremental search
"set number              " absolute line numbers
set scrolloff=2         " keep 2 lines above/below the cursor when scrolling
set scrolljump=1        " when needing to scroll, jump 1 line
set smartcase           " search string determines case matching
set smartindent         " indents after <RETURN> appropriately
set autoindent
"set list                " show whitespace (see \N mapping below)
set cursorline          " high entire line cursor is on
set autochdir           " automatically change the cwd to parent of file edited
set softtabstop=4
set tabstop=4
set expandtab           " turn tabs into spaces (use <C-V>Tab to insert real tabs
set shiftround          " round indent to multiple of shiftwidth
set shiftwidth=4
"set iskeyword+=\$,-     " (THIS BREAKS MOVEMENT CMDS) add extra characters that are valid parts of vars
set wrapscan            " search wraps around EOF

" Vrapper options --------------------------------------------------------
set novisualmouse
set gvimpath=/usr/local/bin/gvim
set cleanindent         " new autoindented line has indent removed if no text added
"set contentassistmode
set startnormalmode

" Custom commands --------------------------------------------------------


" Mappings ---------------------------------------------------------------
inoremap jk <ESC>
" Toggles highlighting of search
noremap <LEADER><SPACE> :set hlsearch!<CR>
" Ctrl-l to turn off higlighting and repaint
noremap <C-L> :nohlsearch<CR><C-L>
" Toggle [N]on-printable characters
nnoremap \N :set list!<CR>
" Change tabs to spaces in buffer
nnoremap <LEADER><TAB> :retab<CR>
nnoremap <c-d> <PageDown>
nnoremap <c-u> <PageUp>

" Toggle maximizing editor
nnoremap <LEADER>G :maximize<CR>

" Keep searching in the middle of the window
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz

" Make movement to beginning/endo of line easier
nnoremap H ^
nnoremap L $
vnoremap L g_

" Make Y and D behave like other capital commands
noremap Y y$
noremap D d$

" Select entire buffer (like Ctrl-A)
nnoremap vy ggVG

" Select last inserted text
nnoremap gV `[v`]

" Use <tab> to indent in visual mode
vnoremap <Tab> >'<0v'>$
vnoremap <S-Tab> <'<0v'>$

" Break a comma-delimited list onto new lines
vnoremap \, :s/,/,\r/g<CR>

" Create newlines without entering insert mode
nnoremap go o<ESC>k
nnoremap gO O<ESC>j

" Command line editing
map <C-K> :<Up>
cnoremap <C-H> <LEFT>
cnoremap <C-L> <RIGHT>
cnoremap <C-J> <DOWN>
cnoremap <C-K> <UP>

" split window horizontally or vertically
nnoremap <LEADER>hs :split<CR>
nnoremap <LEADER>vs :vsplit<CR>

" navigate splits with g command prepended to the analogous vim motion
nnoremap gh <C-W>h
nnoremap gj <C-W>j
nnoremap gk <C-W>k
nnoremap gl <C-W>l
" go to next, previous tab
nnoremap gt <C-W>gt
nnoremap gT <C-W>gT

" Use ; for : in normal and visual mode, less keystrokes
nnoremap ; :
vnoremap ; :

" disable the ever-annoying Ex mode shortcut key. make Q repeat the last macro
" instead.
nnoremap Q @@

" Surround word with " or '
nnoremap \" viw<ESC>a"<ESC>hbi"<ESC>lel
nnoremap \' viw<ESC>a'<ESC>hbi'<ESC>lel

" Eclipse Actions --------------------------------------------------------
eclipseaction eclipsefindref org.eclipse.jdt.ui.edit.text.java.search.references.in.workspace
nnoremap gr :eclipsefindref<cr>

eclipseuiaction eclipsegotoimpl org.eclipse.jdt.ui.edit.text.java.open.implementation
nnoremap gi :eclipsegotoimpl<cr>

" go to type
eclipseuiaction eclipsegototype org.eclipse.jdt.ui.navigate.open.type
nnoremap g/t :eclipsegototype<cr>

" amazing 'omnibox' that searches buffers, commands, views, menus, preferences, etc.
eclipseaction eclipsecmdsearch org.eclipse.ui.window.quickAccess
nnoremap <space> :eclipsecmdsearch<cr>


"vim:ft=vim ts=2 sw=2 tw=2
