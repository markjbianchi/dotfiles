set clipboard+=unnamed
set gdefault            " the ":substitute" flag 'g' is default on
set history=400
set nohlsearch
set ignorecase
set incsearch           " show where search pattern typed so far matches
set matchpairs+=<:>
set nrformats-=octal    " number formats recognized for CTRL-A command
set number
set relativenumber
set scroll=10
set scrolloff=2
set showmode
set sidescroll=1
set sidescrolloff=7
set smartcase
set timeout             " use timeout for mapped key sequences
set timeoutlen=1000     " time that is waited for a mapped key sequence
set visualbell          " use visual bell instead of beeping
set wrapscan
let mapleader = ","
" Mappings ---------------------------------------------------------------
inoremap jk <ESC>
" Toggles highlighting of search
noremap <LEADER><SPACE> :set hlsearch!<CR>
" Keep searching in the middle of the window
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz

" Make movement to begining/endo of line easier
nnoremap H ^
nnoremap L $
vnoremap L g_

" Make Y behave like other capital commands
noremap Y y$

" Split line (sister to [J]oin lines)
" The normal use of S is covered by cc, so don't worry about shadowing it.
nnoremap S i<CR><ESC>^mwgk:silent! s/\v +$//<CR>:noh<CR>`w

" Swap implementations of ` and ' jump-to markers
" By default, ' jumps to the marked line, ` jumps to the mark line and column
nnoremap ' `
nnoremap ` '

" Select entire buffer (like Ctrl-A)
nnoremap vy ggVG

" Use <tab> to indent in visual mode
vnoremap <Tab> >'<0v'>$
vnoremap <S-Tab> <'<0v'>$

" Break a comma-delimited list onto new lines
vnoremap <LEADER>, :s/,/,\r/g<CR>

""""""""""""""""""""""""""""""""""""""""
" emulated vim plugins
""""""""""""""""""""""""""""""""""""""""
" ys<motion|text object><desired char>      surround something
" S<desired char>                           surround when in visual mode
" ds<existing char>                         deletes existing surround
" cs<existing char><desired char>           changes existing surround with desired
set surround             " vim-surround

" gcc                       comment line
" gc<motion|text object>    comment out a block
" gc                        comment out block in visual mode
set commentary



" <C-w> commands
" :split
" :vsplit

" navigate splits with g command prepended to the analogous vim motion
nnoremap gh <C-W>h
nnoremap gj <C-W>j
nnoremap gk <C-W>k
nnoremap gl <C-W>l

